(*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0 OR ISC OR MIT-0
 *)

use_file_raise_failure := true;;

needs "arm/proofs/base.ml";;

(* print_literal_from_elf "arm/aes-xts/aes_xts_decrypt_armv8.o";; *)
let aes_xts_decrypt_mc = define_assert_from_elf "aes_hw_xts_decrypt" "arm/aes-xts/aes_xts_decrypt_armv8.o"
[
  0xd10103ff;       (* arm_SUB SP SP (rvalue (word 64)) *)
  0x6d0027e8;       (* arm_STP D8 D9 SP (Immediate_Offset (iword (&0))) *)
  0x6d012fea;       (* arm_STP D10 D11 SP (Immediate_Offset (iword (&16))) *)
  0xa90253f3;       (* arm_STP X19 X20 SP (Immediate_Offset (iword (&32))) *)
  0xa9035bf5;       (* arm_STP X21 X22 SP (Immediate_Offset (iword (&48))) *)
  0xf100405f;       (* arm_CMP X2 (rvalue (word 16)) *)
  0x5400576b;       (* arm_BLT (word 2796) *)
  0xd503201f;       (* arm_NOP *)
  0x92400c55;       (* arm_AND X21 X2 (rvalue (word 15)) *)
  0x927cec42;       (* arm_AND X2 X2 (rvalue (word 18446744073709551600)) *)
  0xf1004042;       (* arm_SUBS X2 X2 (rvalue (word 16)) *)
  0xb940f086;       (* arm_LDR W6 X4 (Immediate_Offset (word 240)) *)
  0x4cdf7880;       (* arm_LDR Q0 X4 (Postimmediate_Offset (word 16)) *)
  0x4c4070a6;       (* arm_LDR Q6 X5 No_Offset *)
  0x510008c6;       (* arm_SUB W6 W6 (rvalue (word 2)) *)
  0x4cdf7881;       (* arm_LDR Q1 X4 (Postimmediate_Offset (word 16)) *)
  0x4e284806;       (* arm_AESE Q6 Q0 *)
  0x4e2868c6;       (* arm_AESMC Q6 Q6 *)
  0x4cdf7880;       (* arm_LDR Q0 X4 (Postimmediate_Offset (word 16)) *)
  0x710008c6;       (* arm_SUBS W6 W6 (rvalue (word 2)) *)
  0x4e284826;       (* arm_AESE Q6 Q1 *)
  0x4e2868c6;       (* arm_AESMC Q6 Q6 *)
  0x4cdf7881;       (* arm_LDR Q1 X4 (Postimmediate_Offset (word 16)) *)
  0x54ffff2c;       (* arm_BGT (word 2097124) *)
  0x4e284806;       (* arm_AESE Q6 Q0 *)
  0x4e2868c6;       (* arm_AESMC Q6 Q6 *)
  0x4c407880;       (* arm_LDR Q0 X4 No_Offset *)
  0x4e284826;       (* arm_AESE Q6 Q1 *)
  0x6e201cc6;       (* arm_EOR_VEC Q6 Q6 Q0 128 *)
  0x9e6600c9;       (* arm_FMOV_FtoI X9 Q6 0 64 *)
  0x9eae00ca;       (* arm_FMOV_FtoI X10 Q6 1 64 *)
  0x528010f3;       (* arm_MOV W19 (rvalue (word 135)) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670128;       (* arm_FMOV_ItoF Q8 X9 0 *)
  0x9eaf0148;       (* arm_FMOV_ItoF Q8 X10 1 *)
  0xaa0303e7;       (* arm_MOV X7 X3 *)
  0x4cdfa8f0;       (* arm_LDP Q16 Q17 X7 (Postimmediate_Offset (word 32)) *)
  0x4cdfa8ec;       (* arm_LDP Q12 Q13 X7 (Postimmediate_Offset (word 32)) *)
  0x4cdfa8ee;       (* arm_LDP Q14 Q15 X7 (Postimmediate_Offset (word 32)) *)
  0x4cdfa8e4;       (* arm_LDP Q4 Q5 X7 (Postimmediate_Offset (word 32)) *)
  0x4cdfa8f2;       (* arm_LDP Q18 Q19 X7 (Postimmediate_Offset (word 32)) *)
  0x4cdfa8f4;       (* arm_LDP Q20 Q21 X7 (Postimmediate_Offset (word 32)) *)
  0x4cdfa8f6;       (* arm_LDP Q22 Q23 X7 (Postimmediate_Offset (word 32)) *)
  0x4c4078e7;       (* arm_LDR Q7 X7 No_Offset *)
  0xf2400ebf;       (* arm_TST X21 (rvalue (word 15)) *)
  0x54000080;       (* arm_BEQ (word 16) *)
  0xf1004042;       (* arm_SUBS X2 X2 (rvalue (word 16)) *)
  0xf100005f;       (* arm_CMP X2 (rvalue (word 0)) *)
  0x54004a2b;       (* arm_BLT (word 2372) *)
  0x4cdf7000;       (* arm_LDR Q0 X0 (Postimmediate_Offset (word 16)) *)
  0xf100405f;       (* arm_CMP X2 (rvalue (word 16)) *)
  0x4ea01c1d;       (* arm_MOV_VEC Q29 Q0 128 *)
  0x540044a3;       (* arm_BCC (word 2196) *)
  0x4cdf7001;       (* arm_LDR Q1 X0 (Postimmediate_Offset (word 16)) *)
  0xf1008042;       (* arm_SUBS X2 X2 (rvalue (word 32)) *)
  0x4ea01c1c;       (* arm_MOV_VEC Q28 Q0 128 *)
  0x4ea11c3d;       (* arm_MOV_VEC Q29 Q1 128 *)
  0x54003b23;       (* arm_BCC (word 1892) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670129;       (* arm_FMOV_ItoF Q9 X9 0 *)
  0x9eaf0149;       (* arm_FMOV_ItoF Q9 X10 1 *)
  0x4ea01c1b;       (* arm_MOV_VEC Q27 Q0 128 *)
  0x4ea11c3c;       (* arm_MOV_VEC Q28 Q1 128 *)
  0x4cdf7018;       (* arm_LDR Q24 X0 (Postimmediate_Offset (word 16)) *)
  0x4eb81f1d;       (* arm_MOV_VEC Q29 Q24 128 *)
  0xf100405f;       (* arm_CMP X2 (rvalue (word 16)) *)
  0x54002d03;       (* arm_BCC (word 1440) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e67012a;       (* arm_FMOV_ItoF Q10 X9 0 *)
  0x9eaf014a;       (* arm_FMOV_ItoF Q10 X10 1 *)
  0x4ea01c03;       (* arm_MOV_VEC Q3 Q0 128 *)
  0x4ea11c3b;       (* arm_MOV_VEC Q27 Q1 128 *)
  0x4eb81f1c;       (* arm_MOV_VEC Q28 Q24 128 *)
  0x4cdf7019;       (* arm_LDR Q25 X0 (Postimmediate_Offset (word 16)) *)
  0x4eb91f3d;       (* arm_MOV_VEC Q29 Q25 128 *)
  0xf1008042;       (* arm_SUBS X2 X2 (rvalue (word 32)) *)
  0x54001ae3;       (* arm_BCC (word 860) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e67012b;       (* arm_FMOV_ItoF Q11 X9 0 *)
  0x9eaf014b;       (* arm_FMOV_ItoF Q11 X10 1 *)
  0x4cdf701a;       (* arm_LDR Q26 X0 (Postimmediate_Offset (word 16)) *)
  0x6e261c00;       (* arm_EOR_VEC Q0 Q0 Q6 128 *)
  0x6e281c21;       (* arm_EOR_VEC Q1 Q1 Q8 128 *)
  0x6e291f18;       (* arm_EOR_VEC Q24 Q24 Q9 128 *)
  0x6e2a1f39;       (* arm_EOR_VEC Q25 Q25 Q10 128 *)
  0x6e2b1f5a;       (* arm_EOR_VEC Q26 Q26 Q11 128 *)
  0xd503201f;       (* arm_NOP *)
  0xd503201f;       (* arm_NOP *)
  0x4e285a00;       (* arm_AESD Q0 Q16 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a01;       (* arm_AESD Q1 Q16 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a18;       (* arm_AESD Q24 Q16 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a19;       (* arm_AESD Q25 Q16 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a1a;       (* arm_AESD Q26 Q16 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0xf101404c;       (* arm_SUBS X12 X2 (rvalue (word 80)) *)
  0x4e285a20;       (* arm_AESD Q0 Q17 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a21;       (* arm_AESD Q1 Q17 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a38;       (* arm_AESD Q24 Q17 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a39;       (* arm_AESD Q25 Q17 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a3a;       (* arm_AESD Q26 Q17 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x9a8cc3e6;       (* arm_CSEL X6 XZR X12 Condition_GT *)
  0x4e285980;       (* arm_AESD Q0 Q12 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285981;       (* arm_AESD Q1 Q12 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285998;       (* arm_AESD Q24 Q12 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285999;       (* arm_AESD Q25 Q12 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e28599a;       (* arm_AESD Q26 Q12 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2859a0;       (* arm_AESD Q0 Q13 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2859a1;       (* arm_AESD Q1 Q13 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859b8;       (* arm_AESD Q24 Q13 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859b9;       (* arm_AESD Q25 Q13 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2859ba;       (* arm_AESD Q26 Q13 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2859c0;       (* arm_AESD Q0 Q14 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2859c1;       (* arm_AESD Q1 Q14 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859d8;       (* arm_AESD Q24 Q14 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859d9;       (* arm_AESD Q25 Q14 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2859da;       (* arm_AESD Q26 Q14 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2859e0;       (* arm_AESD Q0 Q15 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2859e1;       (* arm_AESD Q1 Q15 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859f8;       (* arm_AESD Q24 Q15 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859f9;       (* arm_AESD Q25 Q15 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2859fa;       (* arm_AESD Q26 Q15 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285880;       (* arm_AESD Q0 Q4 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285881;       (* arm_AESD Q1 Q4 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285898;       (* arm_AESD Q24 Q4 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285899;       (* arm_AESD Q25 Q4 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e28589a;       (* arm_AESD Q26 Q4 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2858a0;       (* arm_AESD Q0 Q5 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2858a1;       (* arm_AESD Q1 Q5 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2858b8;       (* arm_AESD Q24 Q5 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2858b9;       (* arm_AESD Q25 Q5 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2858ba;       (* arm_AESD Q26 Q5 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285a40;       (* arm_AESD Q0 Q18 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a41;       (* arm_AESD Q1 Q18 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a58;       (* arm_AESD Q24 Q18 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a59;       (* arm_AESD Q25 Q18 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a5a;       (* arm_AESD Q26 Q18 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x8b060000;       (* arm_ADD X0 X0 X6 *)
  0x4e285a60;       (* arm_AESD Q0 Q19 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a61;       (* arm_AESD Q1 Q19 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a78;       (* arm_AESD Q24 Q19 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a79;       (* arm_AESD Q25 Q19 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a7a;       (* arm_AESD Q26 Q19 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285a80;       (* arm_AESD Q0 Q20 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a81;       (* arm_AESD Q1 Q20 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a98;       (* arm_AESD Q24 Q20 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a99;       (* arm_AESD Q25 Q20 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a9a;       (* arm_AESD Q26 Q20 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285aa0;       (* arm_AESD Q0 Q21 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285aa1;       (* arm_AESD Q1 Q21 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ab8;       (* arm_AESD Q24 Q21 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ab9;       (* arm_AESD Q25 Q21 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285aba;       (* arm_AESD Q26 Q21 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285ac0;       (* arm_AESD Q0 Q22 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285ac1;       (* arm_AESD Q1 Q22 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ad8;       (* arm_AESD Q24 Q22 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ad9;       (* arm_AESD Q25 Q22 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285ada;       (* arm_AESD Q26 Q22 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285ae0;       (* arm_AESD Q0 Q23 *)
  0x4e285ae1;       (* arm_AESD Q1 Q23 *)
  0x4e285af8;       (* arm_AESD Q24 Q23 *)
  0x4e285af9;       (* arm_AESD Q25 Q23 *)
  0x4e285afa;       (* arm_AESD Q26 Q23 *)
  0x6e271c00;       (* arm_EOR_VEC Q0 Q0 Q7 128 *)
  0x6e261c00;       (* arm_EOR_VEC Q0 Q0 Q6 128 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670126;       (* arm_FMOV_ItoF Q6 X9 0 *)
  0x9eaf0146;       (* arm_FMOV_ItoF Q6 X10 1 *)
  0x6e271c21;       (* arm_EOR_VEC Q1 Q1 Q7 128 *)
  0x6e281c21;       (* arm_EOR_VEC Q1 Q1 Q8 128 *)
  0xacc28c02;       (* arm_LDP Q2 Q3 X0 (Postimmediate_Offset (iword (&80))) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670128;       (* arm_FMOV_ItoF Q8 X9 0 *)
  0x9eaf0148;       (* arm_FMOV_ItoF Q8 X10 1 *)
  0x6e271f18;       (* arm_EOR_VEC Q24 Q24 Q7 128 *)
  0x6e291f18;       (* arm_EOR_VEC Q24 Q24 Q9 128 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670129;       (* arm_FMOV_ItoF Q9 X9 0 *)
  0x9eaf0149;       (* arm_FMOV_ItoF Q9 X10 1 *)
  0x6e271f39;       (* arm_EOR_VEC Q25 Q25 Q7 128 *)
  0x6e2a1f39;       (* arm_EOR_VEC Q25 Q25 Q10 128 *)
  0x3cdd001b;       (* arm_LDR Q27 X0 (Immediate_Offset (word 18446744073709551568)) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e67012a;       (* arm_FMOV_ItoF Q10 X9 0 *)
  0x9eaf014a;       (* arm_FMOV_ItoF Q10 X10 1 *)
  0x6e271f5a;       (* arm_EOR_VEC Q26 Q26 Q7 128 *)
  0x6e2b1f5a;       (* arm_EOR_VEC Q26 Q26 Q11 128 *)
  0xad7f741c;       (* arm_LDP Q28 Q29 X0 (Immediate_Offset (iword (-- &32))) *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e67012b;       (* arm_FMOV_ItoF Q11 X9 0 *)
  0x9eaf014b;       (* arm_FMOV_ItoF Q11 X10 1 *)
  0xac828420;       (* arm_STP Q0 Q1 X1 (Postimmediate_Offset (iword (&80))) *)
  0xad3ee438;       (* arm_STP Q24 Q25 X1 (Immediate_Offset (iword (-- &48))) *)
  0x3c9f003a;       (* arm_STR Q26 X1 (Immediate_Offset (word 18446744073709551600)) *)
  0x6e261c40;       (* arm_EOR_VEC Q0 Q2 Q6 128 *)
  0x6e281c61;       (* arm_EOR_VEC Q1 Q3 Q8 128 *)
  0x6e291f78;       (* arm_EOR_VEC Q24 Q27 Q9 128 *)
  0x6e2a1f99;       (* arm_EOR_VEC Q25 Q28 Q10 128 *)
  0x6e2b1fba;       (* arm_EOR_VEC Q26 Q29 Q11 128 *)
  0xf1014042;       (* arm_SUBS X2 X2 (rvalue (word 80)) *)
  0x54ffe842;       (* arm_BCS (word 2096392) *)
  0xb100405f;       (* arm_CMN X2 (rvalue (word 16)) *)
  0x54000100;       (* arm_BEQ (word 32) *)
  0x91014042;       (* arm_ADD X2 X2 (rvalue (word 80)) *)
  0xb4002bc2;       (* arm_CBZ X2 (word 1400) *)
  0xf1008042;       (* arm_SUBS X2 X2 (rvalue (word 32)) *)
  0x54002683;       (* arm_BCC (word 1232) *)
  0xf1004042;       (* arm_SUBS X2 X2 (rvalue (word 16)) *)
  0x54001d63;       (* arm_BCC (word 940) *)
  0x14000085;       (* arm_B (word 532) *)
  0x6e231cc1;       (* arm_EOR_VEC Q1 Q6 Q3 128 *)
  0x6e281f78;       (* arm_EOR_VEC Q24 Q27 Q8 128 *)
  0x6e291f99;       (* arm_EOR_VEC Q25 Q28 Q9 128 *)
  0x6e2a1fba;       (* arm_EOR_VEC Q26 Q29 Q10 128 *)
  0x4e285a01;       (* arm_AESD Q1 Q16 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a18;       (* arm_AESD Q24 Q16 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a19;       (* arm_AESD Q25 Q16 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a1a;       (* arm_AESD Q26 Q16 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285a21;       (* arm_AESD Q1 Q17 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a38;       (* arm_AESD Q24 Q17 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a39;       (* arm_AESD Q25 Q17 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a3a;       (* arm_AESD Q26 Q17 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285981;       (* arm_AESD Q1 Q12 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285998;       (* arm_AESD Q24 Q12 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285999;       (* arm_AESD Q25 Q12 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e28599a;       (* arm_AESD Q26 Q12 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2859a1;       (* arm_AESD Q1 Q13 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859b8;       (* arm_AESD Q24 Q13 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859b9;       (* arm_AESD Q25 Q13 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2859ba;       (* arm_AESD Q26 Q13 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2859c1;       (* arm_AESD Q1 Q14 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859d8;       (* arm_AESD Q24 Q14 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859d9;       (* arm_AESD Q25 Q14 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2859da;       (* arm_AESD Q26 Q14 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2859e1;       (* arm_AESD Q1 Q15 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859f8;       (* arm_AESD Q24 Q15 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859f9;       (* arm_AESD Q25 Q15 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2859fa;       (* arm_AESD Q26 Q15 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285881;       (* arm_AESD Q1 Q4 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285898;       (* arm_AESD Q24 Q4 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285899;       (* arm_AESD Q25 Q4 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e28589a;       (* arm_AESD Q26 Q4 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e2858a1;       (* arm_AESD Q1 Q5 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2858b8;       (* arm_AESD Q24 Q5 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2858b9;       (* arm_AESD Q25 Q5 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e2858ba;       (* arm_AESD Q26 Q5 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285a41;       (* arm_AESD Q1 Q18 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a58;       (* arm_AESD Q24 Q18 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a59;       (* arm_AESD Q25 Q18 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a5a;       (* arm_AESD Q26 Q18 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285a61;       (* arm_AESD Q1 Q19 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a78;       (* arm_AESD Q24 Q19 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a79;       (* arm_AESD Q25 Q19 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a7a;       (* arm_AESD Q26 Q19 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285a81;       (* arm_AESD Q1 Q20 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a98;       (* arm_AESD Q24 Q20 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a99;       (* arm_AESD Q25 Q20 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285a9a;       (* arm_AESD Q26 Q20 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285aa1;       (* arm_AESD Q1 Q21 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ab8;       (* arm_AESD Q24 Q21 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ab9;       (* arm_AESD Q25 Q21 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285aba;       (* arm_AESD Q26 Q21 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285ac1;       (* arm_AESD Q1 Q22 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ad8;       (* arm_AESD Q24 Q22 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ad9;       (* arm_AESD Q25 Q22 *)
  0x4e287b39;       (* arm_AESIMC Q25 Q25 *)
  0x4e285ada;       (* arm_AESD Q26 Q22 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4e285ae1;       (* arm_AESD Q1 Q23 *)
  0x4e285af8;       (* arm_AESD Q24 Q23 *)
  0x4e285af9;       (* arm_AESD Q25 Q23 *)
  0x4e285afa;       (* arm_AESD Q26 Q23 *)
  0x6e271c21;       (* arm_EOR_VEC Q1 Q1 Q7 128 *)
  0x6e261c21;       (* arm_EOR_VEC Q1 Q1 Q6 128 *)
  0x6e271f18;       (* arm_EOR_VEC Q24 Q24 Q7 128 *)
  0x6e281f18;       (* arm_EOR_VEC Q24 Q24 Q8 128 *)
  0x6e271f39;       (* arm_EOR_VEC Q25 Q25 Q7 128 *)
  0x6e291f39;       (* arm_EOR_VEC Q25 Q25 Q9 128 *)
  0x6e271f5a;       (* arm_EOR_VEC Q26 Q26 Q7 128 *)
  0x6e2a1f5a;       (* arm_EOR_VEC Q26 Q26 Q10 128 *)
  0x9e660149;       (* arm_FMOV_FtoI X9 Q10 0 64 *)
  0x9eae014a;       (* arm_FMOV_FtoI X10 Q10 1 64 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670126;       (* arm_FMOV_ItoF Q6 X9 0 *)
  0x9eaf0146;       (* arm_FMOV_ItoF Q6 X10 1 *)
  0x4c9f7021;       (* arm_STR Q1 X1 (Postimmediate_Offset (word 16)) *)
  0x4c9fa038;       (* arm_STP Q24 Q25 X1 (Postimmediate_Offset (word 32)) *)
  0x4c9f703a;       (* arm_STR Q26 X1 (Postimmediate_Offset (word 16)) *)
  0x140000d5;       (* arm_B (word 852) *)
  0x6e3b1cc0;       (* arm_EOR_VEC Q0 Q6 Q27 128 *)
  0x6e3c1d01;       (* arm_EOR_VEC Q1 Q8 Q28 128 *)
  0x6e291fb8;       (* arm_EOR_VEC Q24 Q29 Q9 128 *)
  0x4e285a00;       (* arm_AESD Q0 Q16 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a01;       (* arm_AESD Q1 Q16 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a18;       (* arm_AESD Q24 Q16 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a20;       (* arm_AESD Q0 Q17 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a21;       (* arm_AESD Q1 Q17 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a38;       (* arm_AESD Q24 Q17 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285980;       (* arm_AESD Q0 Q12 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285981;       (* arm_AESD Q1 Q12 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285998;       (* arm_AESD Q24 Q12 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859a0;       (* arm_AESD Q0 Q13 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2859a1;       (* arm_AESD Q1 Q13 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859b8;       (* arm_AESD Q24 Q13 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859c0;       (* arm_AESD Q0 Q14 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2859c1;       (* arm_AESD Q1 Q14 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859d8;       (* arm_AESD Q24 Q14 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859e0;       (* arm_AESD Q0 Q15 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2859e1;       (* arm_AESD Q1 Q15 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859f8;       (* arm_AESD Q24 Q15 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285880;       (* arm_AESD Q0 Q4 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285881;       (* arm_AESD Q1 Q4 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285898;       (* arm_AESD Q24 Q4 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2858a0;       (* arm_AESD Q0 Q5 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e2858a1;       (* arm_AESD Q1 Q5 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2858b8;       (* arm_AESD Q24 Q5 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a40;       (* arm_AESD Q0 Q18 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a41;       (* arm_AESD Q1 Q18 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a58;       (* arm_AESD Q24 Q18 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a60;       (* arm_AESD Q0 Q19 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a61;       (* arm_AESD Q1 Q19 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a78;       (* arm_AESD Q24 Q19 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a80;       (* arm_AESD Q0 Q20 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285a81;       (* arm_AESD Q1 Q20 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a98;       (* arm_AESD Q24 Q20 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285aa0;       (* arm_AESD Q0 Q21 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285aa1;       (* arm_AESD Q1 Q21 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ab8;       (* arm_AESD Q24 Q21 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ac0;       (* arm_AESD Q0 Q22 *)
  0x4e287800;       (* arm_AESIMC Q0 Q0 *)
  0x4e285ac1;       (* arm_AESD Q1 Q22 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ad8;       (* arm_AESD Q24 Q22 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ae0;       (* arm_AESD Q0 Q23 *)
  0x4e285ae1;       (* arm_AESD Q1 Q23 *)
  0x4e285af8;       (* arm_AESD Q24 Q23 *)
  0x6e271c00;       (* arm_EOR_VEC Q0 Q0 Q7 128 *)
  0x6e261c00;       (* arm_EOR_VEC Q0 Q0 Q6 128 *)
  0x6e271c21;       (* arm_EOR_VEC Q1 Q1 Q7 128 *)
  0x6e281c21;       (* arm_EOR_VEC Q1 Q1 Q8 128 *)
  0x6e271f18;       (* arm_EOR_VEC Q24 Q24 Q7 128 *)
  0x6e291f18;       (* arm_EOR_VEC Q24 Q24 Q9 128 *)
  0x9e660129;       (* arm_FMOV_FtoI X9 Q9 0 64 *)
  0x9eae012a;       (* arm_FMOV_FtoI X10 Q9 1 64 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670126;       (* arm_FMOV_ItoF Q6 X9 0 *)
  0x9eaf0146;       (* arm_FMOV_ItoF Q6 X10 1 *)
  0x4c9fa020;       (* arm_STP Q0 Q1 X1 (Postimmediate_Offset (word 32)) *)
  0x4c9f7038;       (* arm_STR Q24 X1 (Postimmediate_Offset (word 16)) *)
  0x14000070;       (* arm_B (word 448) *)
  0x6e261f81;       (* arm_EOR_VEC Q1 Q28 Q6 128 *)
  0x6e281fb8;       (* arm_EOR_VEC Q24 Q29 Q8 128 *)
  0x4e285a01;       (* arm_AESD Q1 Q16 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a18;       (* arm_AESD Q24 Q16 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a21;       (* arm_AESD Q1 Q17 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a38;       (* arm_AESD Q24 Q17 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285981;       (* arm_AESD Q1 Q12 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285998;       (* arm_AESD Q24 Q12 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859a1;       (* arm_AESD Q1 Q13 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859b8;       (* arm_AESD Q24 Q13 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859c1;       (* arm_AESD Q1 Q14 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859d8;       (* arm_AESD Q24 Q14 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859e1;       (* arm_AESD Q1 Q15 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2859f8;       (* arm_AESD Q24 Q15 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285881;       (* arm_AESD Q1 Q4 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285898;       (* arm_AESD Q24 Q4 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2858a1;       (* arm_AESD Q1 Q5 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e2858b8;       (* arm_AESD Q24 Q5 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a41;       (* arm_AESD Q1 Q18 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a58;       (* arm_AESD Q24 Q18 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a61;       (* arm_AESD Q1 Q19 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a78;       (* arm_AESD Q24 Q19 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a81;       (* arm_AESD Q1 Q20 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285a98;       (* arm_AESD Q24 Q20 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285aa1;       (* arm_AESD Q1 Q21 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ab8;       (* arm_AESD Q24 Q21 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ac1;       (* arm_AESD Q1 Q22 *)
  0x4e287821;       (* arm_AESIMC Q1 Q1 *)
  0x4e285ad8;       (* arm_AESD Q24 Q22 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ae1;       (* arm_AESD Q1 Q23 *)
  0x4e285af8;       (* arm_AESD Q24 Q23 *)
  0x6e271c21;       (* arm_EOR_VEC Q1 Q1 Q7 128 *)
  0x6e261c21;       (* arm_EOR_VEC Q1 Q1 Q6 128 *)
  0x4c9f7021;       (* arm_STR Q1 X1 (Postimmediate_Offset (word 16)) *)
  0x6e271f18;       (* arm_EOR_VEC Q24 Q24 Q7 128 *)
  0x6e281f18;       (* arm_EOR_VEC Q24 Q24 Q8 128 *)
  0x4c9f7038;       (* arm_STR Q24 X1 (Postimmediate_Offset (word 16)) *)
  0x9e660109;       (* arm_FMOV_FtoI X9 Q8 0 64 *)
  0x9eae010a;       (* arm_FMOV_FtoI X10 Q8 1 64 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670126;       (* arm_FMOV_ItoF Q6 X9 0 *)
  0x9eaf0146;       (* arm_FMOV_ItoF Q6 X10 1 *)
  0x14000029;       (* arm_B (word 164) *)
  0x6e261fb8;       (* arm_EOR_VEC Q24 Q29 Q6 128 *)
  0x4e285a18;       (* arm_AESD Q24 Q16 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a38;       (* arm_AESD Q24 Q17 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285998;       (* arm_AESD Q24 Q12 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859b8;       (* arm_AESD Q24 Q13 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859d8;       (* arm_AESD Q24 Q14 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2859f8;       (* arm_AESD Q24 Q15 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285898;       (* arm_AESD Q24 Q4 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e2858b8;       (* arm_AESD Q24 Q5 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a58;       (* arm_AESD Q24 Q18 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a78;       (* arm_AESD Q24 Q19 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285a98;       (* arm_AESD Q24 Q20 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ab8;       (* arm_AESD Q24 Q21 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285ad8;       (* arm_AESD Q24 Q22 *)
  0x4e287b18;       (* arm_AESIMC Q24 Q24 *)
  0x4e285af8;       (* arm_AESD Q24 Q23 *)
  0x6e271f18;       (* arm_EOR_VEC Q24 Q24 Q7 128 *)
  0x6e261f18;       (* arm_EOR_VEC Q24 Q24 Q6 128 *)
  0x4c9f7038;       (* arm_STR Q24 X1 (Postimmediate_Offset (word 16)) *)
  0x9e6600c9;       (* arm_FMOV_FtoI X9 Q6 0 64 *)
  0x9eae00ca;       (* arm_FMOV_FtoI X10 Q6 1 64 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670126;       (* arm_FMOV_ItoF Q6 X9 0 *)
  0x9eaf0146;       (* arm_FMOV_ItoF Q6 X10 1 *)
  0x14000001;       (* arm_B (word 4) *)
  0xf2400ebf;       (* arm_TST X21 (rvalue (word 15)) *)
  0x54000780;       (* arm_BEQ (word 240) *)
  0xaa0303e7;       (* arm_MOV X7 X3 *)
  0x9e6600c9;       (* arm_FMOV_FtoI X9 Q6 0 64 *)
  0x9eae00ca;       (* arm_FMOV_FtoI X10 Q6 1 64 *)
  0x93ca8156;       (* arm_ROR X22 X10 32 *)
  0x93c9fd4a;       (* arm_EXTR X10 X10 X9 63 *)
  0x0a967e6b;       (* arm_AND W11 W19 (Shiftedreg W22 ASR 31) *)
  0xca090569;       (* arm_EOR X9 X11 (Shiftedreg X9 LSL 1) *)
  0x9e670128;       (* arm_FMOV_ItoF Q8 X9 0 *)
  0x9eaf0148;       (* arm_FMOV_ItoF Q8 X10 1 *)
  0x4cdf7800;       (* arm_LDR Q0 X0 (Postimmediate_Offset (word 16)) *)
  0x6e281c1a;       (* arm_EOR_VEC Q26 Q0 Q8 128 *)
  0xb940f066;       (* arm_LDR W6 X3 (Immediate_Offset (word 240)) *)
  0x4cdf7860;       (* arm_LDR Q0 X3 (Postimmediate_Offset (word 16)) *)
  0x510008c6;       (* arm_SUB W6 W6 (rvalue (word 2)) *)
  0x4cdf7861;       (* arm_LDR Q1 X3 (Postimmediate_Offset (word 16)) *)
  0x4e28581a;       (* arm_AESD Q26 Q0 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4cdf7860;       (* arm_LDR Q0 X3 (Postimmediate_Offset (word 16)) *)
  0x710008c6;       (* arm_SUBS W6 W6 (rvalue (word 2)) *)
  0x4e28583a;       (* arm_AESD Q26 Q1 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4cdf7861;       (* arm_LDR Q1 X3 (Postimmediate_Offset (word 16)) *)
  0x54ffff2c;       (* arm_BGT (word 2097124) *)
  0x4e28581a;       (* arm_AESD Q26 Q0 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4c407860;       (* arm_LDR Q0 X3 No_Offset *)
  0x4e28583a;       (* arm_AESD Q26 Q1 *)
  0x6e201f5a;       (* arm_EOR_VEC Q26 Q26 Q0 128 *)
  0x6e281f5a;       (* arm_EOR_VEC Q26 Q26 Q8 128 *)
  0x4c00703a;       (* arm_STR Q26 X1 No_Offset *)
  0xaa0003f4;       (* arm_MOV X20 X0 *)
  0x9100402d;       (* arm_ADD X13 X1 (rvalue (word 16)) *)
  0xf10006b5;       (* arm_SUBS X21 X21 (rvalue (word 1)) *)
  0x3875682f;       (* arm_LDRB W15 X1 (Register_Offset X21) *)
  0x38756a8e;       (* arm_LDRB W14 X20 (Register_Offset X21) *)
  0x383569af;       (* arm_STRB W15 X13 (Register_Offset X21) *)
  0x3835682e;       (* arm_STRB W14 X1 (Register_Offset X21) *)
  0x54ffff6c;       (* arm_BGT (word 2097132) *)
  0x4c40703a;       (* arm_LDR Q26 X1 No_Offset *)
  0x6e261f5a;       (* arm_EOR_VEC Q26 Q26 Q6 128 *)
  0xb940f0e6;       (* arm_LDR W6 X7 (Immediate_Offset (word 240)) *)
  0x4cdf70e0;       (* arm_LDR Q0 X7 (Postimmediate_Offset (word 16)) *)
  0x510008c6;       (* arm_SUB W6 W6 (rvalue (word 2)) *)
  0x4cdf70e1;       (* arm_LDR Q1 X7 (Postimmediate_Offset (word 16)) *)
  0x4e28581a;       (* arm_AESD Q26 Q0 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4cdf78e0;       (* arm_LDR Q0 X7 (Postimmediate_Offset (word 16)) *)
  0x710008c6;       (* arm_SUBS W6 W6 (rvalue (word 2)) *)
  0x4e28583a;       (* arm_AESD Q26 Q1 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4cdf78e1;       (* arm_LDR Q1 X7 (Postimmediate_Offset (word 16)) *)
  0x54ffff2c;       (* arm_BGT (word 2097124) *)
  0x4e28581a;       (* arm_AESD Q26 Q0 *)
  0x4e287b5a;       (* arm_AESIMC Q26 Q26 *)
  0x4c4078e0;       (* arm_LDR Q0 X7 No_Offset *)
  0x4e28583a;       (* arm_AESD Q26 Q1 *)
  0x6e201f5a;       (* arm_EOR_VEC Q26 Q26 Q0 128 *)
  0x6e261f5a;       (* arm_EOR_VEC Q26 Q26 Q6 128 *)
  0x4c00703a;       (* arm_STR Q26 X1 No_Offset *)
  0x6d4027e8;       (* arm_LDP D8 D9 SP (Immediate_Offset (iword (&0))) *)
  0x6d412fea;       (* arm_LDP D10 D11 SP (Immediate_Offset (iword (&16))) *)
  0xa94253f3;       (* arm_LDP X19 X20 SP (Immediate_Offset (iword (&32))) *)
  0xa9435bf5;       (* arm_LDP X21 X22 SP (Immediate_Offset (iword (&48))) *)
  0x910103ff;       (* arm_ADD SP SP (rvalue (word 64)) *)
  0xd65f03c0        (* arm_RET X30 *)
];;